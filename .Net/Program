using System;
using System.Data;  
using System.Data.SqlClient;
using System.Threading;

namespace AdoNetConsoleApplication  
{  
    class Program{

    // Crea coneccion   
    static SqlConnection con = new SqlConnection("data source=.; database=Aseni;integrated security=SSPI");
    //Crea coneccion con pool
    static SqlConnection pool = new SqlConnection("data source=.; database=Aseni; user ID=Jenaro;Password=Jenaro2000;integrated security=SSPI;Max Pool Size=4");
    //Guarda la cantidad de cantones
    static int cantones;
    
        static void Main(string[] args)  
        {  
            //Calcula total de cantones
            new Program().cantidad_canton();
            //Creac un hilo principal y uno secundario
            Thread t = new Thread(new ThreadStart(ThreadProc));
            t.Start();
            for (int i = 0; i < 10; i++){
                //Realiza el SP
                var rand = new Random();
                Console.WriteLine("Query1: {0}", i);
                new Program().Query1(rand.Next(1,cantones + 1));
                Console.WriteLine(" ");
                Thread.Sleep(0);
            }
            Console.WriteLine("Main thread: Call Join(), to wait until ThreadProc ends.");
            t.Join();
            Console.WriteLine("Main thread: ThreadProc.Join has returned.  Press Enter to end program.");
            Console.ReadLine();
        }

        public static void ThreadProc(){//Thread secundario que realiza el query 2
             for (int i = 0; i < 10; i++){
                 Console.WriteLine("Query2: {0}", i);
                 new Program().Query2();
                 Console.WriteLine(" ");
                 Thread.Sleep(0);
             }
        }

        public void cantidad_canton(){//Calcula total de cantones
            try{
                SqlCommand cm = new SqlCommand("SELECT COUNT(*) AS cantones_total FROM Canton",con);
                con.Open();
                
                SqlDataReader sdr3 = cm.ExecuteReader();
                while (sdr3.Read())
                {
                    cantones = int.Parse(sdr3["cantones_total"].ToString());
                    
                }
                

                con.Close();
                
            }
            catch (Exception e)  
            {  
                Console.WriteLine("OOPs, something went wrong."+e); 
            }
        }

        public void Query1(int cantones)  //Ejecuta el SP
        {  
            try  
            {  
                // Creating Connection  
                  
                
                // writing sql query  
                SqlCommand cm = new SqlCommand("ListaEntregables", con);
                cm.CommandType = CommandType.StoredProcedure;

                SqlParameter canton;
                canton = cm.Parameters.Add("@canton",SqlDbType.Int);
                canton.Value = cantones;

                // Opening Connection  
                con.Open();   
                
                SqlDataReader sdr = cm.ExecuteReader();
                
                while (sdr.Read())
                {
                    Console.WriteLine(sdr["id"] + " " + sdr["proposito"] + " " + sdr["kpi" ] + " " + sdr["id_canton"] + " " + sdr["id_partido"]);

                }

                con.Close();
                
                
                   
            }  
            catch (Exception e)  
            {  
                Console.WriteLine("OOPs, something went wrong."+e);  
            }   
            
        }

        public void Query2() //Ejecuta el query 2
        { 
            try{
                SqlCommand cmd = new SqlCommand("SELECT C.id AS Id_Canton, C.nombre AS Canton, count(*) AS Cantidad_Entregables FROM  Canton AS C inner join Entregable AS E ON C.id = E.id_canton inner join (	SELECT count(*) AS Total_partidos FROM Partido )AS Partidos ON Partidos.Total_partidos > 0 GROUP BY C.id,C.nombre,Total_partidos HAVING Partidos.Total_partidos*0.25 >= count(DISTINCT E.id_partido)", pool);
                pool.Open();

                SqlDataReader sdr2 = cmd.ExecuteReader();

                while (sdr2.Read())
                {
                    Console.WriteLine(sdr2["Id_Canton"] + " " + sdr2["Canton"]+" "+ sdr2["Cantidad_Entregables"]);
                }

                pool.Close();            
            }
            catch (Exception e)  
            {  
                Console.WriteLine("OOPs, something went wrong."+e);  
            } 

        }
    }  
} 
